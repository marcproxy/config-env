{"version":3,"sources":["../src/lcov-summary.js"],"names":[],"mappings":";AACA,YAAY,CAAC;;;;;;;;;;;;AAIb,SAAS,OAAO,CAAC,OAAO,EAAE,QAAQ,EAAE;AAChC,QAAI,CAAC,OAAO,EAAE;AACV,eAAO,QAAQ,CAAC,IAAI,KAAK,CAAC,kBAAkB,CAAC,CAAC,CAAC;KAClD;AACD,6BAAM,OAAO,EAAE,UAAC,KAAK,EAAE,OAAO,EAAK;AAC/B,YAAI;;AAEA,gBAAM,WAAW,GAAG,OAAO,CAAC,GAAG,CAAC,UAAC,MAAM,EAAK;AACxC,uBAAO,gBAVd,UAAU,CAUmB,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,KAAK,CAAC,CAAC;aACpD,CAAC,CAAC;AACH,gBAAM,cAAc,GAAG,gBAZf,cAAc,CAYoB,WAAW,CAAC,CAAC;AACvD,gBAAM,MAAM,GAAG,YAZlB,YAAY,EAYwB,CAAC;AAClC,gBAAM,MAAM,GAAG,MAAM,CAAC,WAAW,CAAC,cAAc,CAAC,CAAC;AAClD,oBAAQ,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;SAC1B,CAAC,OAAO,KAAK,EAAE;AACZ,oBAAQ,CAAC,KAAK,CAAC,CAAC;SACnB;KACJ,CAAC,CAAC;CACN;AACD,MAAM,CAAC,OAAO,GAAG,OAAO,CAAC","file":"lcov-summary.js","sourcesContent":["// LICENSE : MIT\n\"use strict\";\nimport parse from \"lcov-parse\";\nimport { FileResult,CoverageResult } from \"./FileResult\";\nimport { ReportWriter } from \"./Writer\";\nfunction summary(content, callback) {\n    if (!content) {\n        return callback(new Error(\"content is empty\"));\n    }\n    parse(content, (error, results) => {\n        try {\n            /** @type FileResult[] */\n            const fileResults = results.map((result) => {\n                return new FileResult(result.file, result.lines);\n            });\n            const coverageResult = new CoverageResult(fileResults);\n            const writer = new ReportWriter();\n            const output = writer.writeReport(coverageResult);\n            callback(null, output);\n        } catch (error) {\n            callback(error);\n        }\n    });\n}\nmodule.exports = summary;"]}